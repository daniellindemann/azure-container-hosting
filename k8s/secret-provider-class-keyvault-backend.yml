# This is a SecretProviderClass example using user-assigned identity to access your key vault
# Get keyvault secret provider identity via `az aks show -g <resource-group> -n <aks-cluster-name> --query 'addonProfiles.azureKeyvaultSecretsProvider.identity  | { objectId: objectId, clientId: clientId}' -o table`
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: azure-keyvault-backend
spec:
  provider: azure
  parameters:
    usePodIdentity: "false"
    useVMManagedIdentity: "true"          # Set to true for using managed identity
    userAssignedIdentityID: 47fdc50b-a9c7-4a34-a813-0f15d0ecb6dc   # Set the clientID of the user-assigned managed identity to use
    tenantId: 3eef8910-0332-4feb-9436-8c4579d2696d                 # The tenant ID of the key vault
    keyvaultName: kv-azh-shared-qdqzaqsx        # Set to the name of your key vault
    cloudName: ""                         # [OPTIONAL for Azure] if not provided, the Azure environment defaults to AzurePublicCloud
    objects:  |
      array:
        - |
          objectName: connection-string-beer-rating
          objectType: secret              # object types: secret, key, or cert
          objectVersion: ""               # [OPTIONAL] object versions, default to latest if empty
  secretObjects: # secret objects allow you to create secrets out of the keyvault objects
  - secretName: appsecrets
    type: Opaque
    data:
    - objectName: connection-string-beer-rating
      key: connection-string-beer-rating
